---
// src/components/ArticleCard.astro
const { article, featured = false, class: className = '' } = Astro.props;

// Formater la date
function formatDate(dateString) {
  const date = new Date(dateString);
  return date.toLocaleDateString('fr-FR', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}

// Calculer le temps de lecture (approximatif)
function calculateReadTime(content) {
  const wordsPerMinute = 200;
  const words = content.split(/\s+/).length;
  const minutes = Math.ceil(words / wordsPerMinute);
  return minutes;
}

const readTime = calculateReadTime(article.content);
const formattedDate = formatDate(article.publishedAt);
---

<article 
  class={`article-card ${featured ? 'featured' : ''} ${className}`}
  data-tags={JSON.stringify(article.tags)}
>
  <a href={`/actualites/${article.slug}`} class="card-link">
    <!-- Image de l'article (optionnel) -->
    {article.seo?.ogImage && (
      <div class="card-image">
        <img 
          src={article.seo.ogImage} 
          alt={article.title}
          loading="lazy"
          width="400"
          height="250"
        />
      </div>
    )}
    
    <div class="card-content">
      <!-- Badges -->
      <div class="card-badges">
        {article.featured && (
          <span class="badge featured-badge">Ã€ la une</span>
        )}
        {article.tags.slice(0, 2).map((tag) => (
          <span class="badge tag-badge">{tag}</span>
        ))}
      </div>

      <!-- Titre -->
      <h3 class="card-title">{article.title}</h3>
      
      <!-- Extrait -->
      <p class="card-excerpt">{article.excerpt}</p>
      
      <!-- MÃ©tadonnÃ©es -->
      <div class="card-meta">
        <div class="meta-left">
          <span class="author">Par {article.author}</span>
          <time class="date" datetime={article.publishedAt}>
            {formattedDate}
          </time>
        </div>
        <div class="meta-right">
          <span class="read-time">
            ðŸ“– {readTime} min de lecture
          </span>
        </div>
      </div>
    </div>
  </a>
</article>

<style>
  .article-card {
    background: white;
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .article-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);
  }

  .article-card.featured {
    border: 2px solid #667eea;
    background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);
  }

  .card-link {
    text-decoration: none;
    color: inherit;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .card-image {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .card-content {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .card-badges {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 1rem;
    flex-wrap: wrap;
  }

  .badge {
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .featured-badge {
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
  }

  .tag-badge {
    background: #e2e8f0;
    color: #4a5568;
  }

  .card-title {
    font-size: 1.25rem;
    font-weight: 700;
    line-height: 1.3;
    margin-bottom: 0.75rem;
    color: #2d3748;
  }

  .card-excerpt {
    color: #718096;
    line-height: 1.6;
    margin-bottom: 1rem;
    flex: 1;
  }

  .card-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.875rem;
    color: #a0aec0;
    margin-top: auto;
    padding-top: 1rem;
    border-top: 1px solid #e2e8f0;
  }

  .meta-left {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .author {
    font-weight: 600;
    color: #4a5568;
  }

  .date {
    color: #718096;
  }

  .read-time {
    color: #9ca3af;
    font-size: 0.8rem;
    white-space: nowrap;
  }
</style>